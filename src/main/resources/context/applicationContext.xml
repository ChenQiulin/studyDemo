<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"

       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans

	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- 异常处理方式1 -->

    <bean id="exceptionHandler" class="study.spring.exception.exception.MyExceptionHandler"/>


    <!-- 异常处理方式2 -->
    <!--
    <bean
        class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        &lt;!&ndash; 定义默认的异常处理页面，当该异常类型的注册时使用 &ndash;&gt;
        <property name="defaultErrorView" value="error"></property>
        &lt;!&ndash; 定义异常处理页面用来获取异常信息的变量名，默认名为exception &ndash;&gt;
        <property name="exceptionAttribute" value="ex"></property>
        &lt;!&ndash; 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 &ndash;&gt;
        <property name="exceptionMappings">
            <props>
                <prop key="cn.basttg.core.exception.BusinessException">error-business</prop>
                <prop key="cn.basttg.core.exception.ParameterException">error-parameter</prop>
            </props>
        </property>

        &lt;!&ndash; 相关状态码对应的错误页面 &ndash;&gt;
        <property name="statusCodes">
            <props>
                <prop key="errors/500">500</prop>
                <prop key="errors/404">404</prop>
            </props>
        </property>
        &lt;!&ndash; 设置日志输出级别，不定义则默认不输出警告等错误日志信息 &ndash;&gt;
        <property name="warnLogCategory" value="WARN" />
        &lt;!&ndash; 默认HTTP状态码 &ndash;&gt;
        <property name="defaultStatusCode" value="500" />
    </bean>-->


    <context:annotation-config/>


    <context:component-scan base-package="study.spring.exception"
                            use-default-filters="false">
        <context:include-filter type="regex"
                                expression="study.spring.exception.controller.*"/>
        <context:include-filter type="regex"
                                expression="study.spring.exception.service.*"/>
        <context:include-filter type="regex"
                                expression="study.spring.exception.dao.*"/>

    </context:component-scan>

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射  -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>


    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="url" value="${jdbc_url}"/>
        <property name="username" value="${jdbc_user}"/>
        <property name="password" value="${jdbc_password}"/>
        <property name="filters" value="stat"/>
        <property name="maxActive" value="20"/>
        <property name="initialSize" value="1"/>
        <property name="maxWait" value="60000"/>
        <property name="minIdle" value="1"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
    </bean>

    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀  -->
    <bean id="jspViewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/jsps/" p:suffix=".jsp">
    </bean>


    <!--<bean name="server1" class="java.net.InetSocketAddress">-->
        <!--<constructor-arg>-->
            <!--<value>172.16.100.58</value>-->
        <!--</constructor-arg>-->
        <!--<constructor-arg>-->
            <!--<value>172.16.100.56</value>-->
        <!--</constructor-arg>-->
    <!--</bean>-->
    <bean name="memcachedClient"
          class="net.rubyeye.xmemcached.utils.XMemcachedClientFactoryBean" destroy-method="shutdown">
        <property name="servers">
            <value>172.16.100.58:11211 172.16.100.56:11211</value>
        </property>
        <!-- server's weights -->
        <!--<property name="weights">
            <list>
                <value>1</value>
                <value>2</value>
                <value>3</value>
            </list>
        </property>-->

        <!-- AuthInfo map,only valid on 1.2.5 or later version -->
       <!-- <property name="authInfoMap">
            <map>
                <entry key-ref="server1">
                    <bean class="net.rubyeye.xmemcached.auth.AuthInfo"
                          factory-method="typical">
                        <constructor-arg index="0">
                            <value>cacheuser</value>
                        </constructor-arg>
                        <constructor-arg index="1">
                            <value>123456</value>
                        </constructor-arg>
                    </bean>
                </entry>
            </map>
        </property>-->
        <!-- nio connection pool size -->
        <property name="connectionPoolSize" value="2"></property>
        <!-- Use binary protocol,default is TextCommandFactory -->
        <property name="commandFactory">
            <bean class="net.rubyeye.xmemcached.command.BinaryCommandFactory"></bean>
        </property>
        <!-- Distributed strategy -->
        <property name="sessionLocator">
            <bean class="net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator"></bean>
        </property>
        <!-- Serializing transcoder -->
        <property name="transcoder">
            <bean class="net.rubyeye.xmemcached.transcoders.SerializingTranscoder"/>
        </property>
        <!-- ByteBuffer allocator -->
        <property name="bufferAllocator">
            <bean class="net.rubyeye.xmemcached.buffer.SimpleBufferAllocator"></bean>
        </property>
        <!-- Failure mode -->
        <property name="failureMode" value="false"/>
    </bean>

</beans>
